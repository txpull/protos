syntax = "proto3";
option go_package = "github.com/txpull/protos/dist/go/chains;chains";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "common/status.proto";

package txpull.v1.chains;

enum ChainStatus {
    CS_NONE      = 0;
    CS_OFFLINE   = 1;
    CS_ONLINE    = 2;
    CS_DISABLED  = 3;
    CS_WIP       = 4;
}

// The Token protocol buffer message defines a standardized data format for representing 
// token objects. It includes fields such as the token identifier, blockchain identifier, 
// token name, description, symbol, decimal places, total supply, creation information, 
// owner information, and security information. The message can be used in a variety of contexts
// to provide a standardized way of representing token objects.
message Chain {
    uint64  id = 1;
    uint64  chain_id = 2;
    string  name = 3;
    string  address = 4;
    uint64  latest_block = 5;
    uint64  latest_indexed_block = 6;
    uint64  total_indexed_blocks = 7;
    uint64  average_index_time_ms = 8;
    txpull.v1.chains.ChainStatus status = 9;
    google.protobuf.Timestamp creation_timestamp = 10;
}

message FilterChainRequest {
    txpull.v1.common.Status status = 5;
}

message FilterChainResponse {
    txpull.v1.common.Status status = 1;
    repeated txpull.v1.chains.Chain chains = 2;
}

message GetChainRequest {
    uint64 chain_id = 1;
    uint64 id = 2;
}

message GetChainResponse {
    txpull.v1.common.Status status = 1;
    txpull.v1.chains.Chain chain = 2;
}


service Chains {
    rpc Filter(FilterChainRequest) returns (FilterChainResponse) {
        option (google.api.http) = {
            get: "/v1/chains"
        };
    };

    rpc Get(GetChainRequest) returns (GetChainResponse) {
        option (google.api.http) = {
            get: "/v1/chains/{id}"
        };
    };
}