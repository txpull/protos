syntax = "proto3";
option go_package = "github.com/txpull/protos/dist/go/transactions;transactions";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "common/status.proto";

package txpull.v1.transactions;

enum TransactionStatus {
    TS_NONE = 0;
    TS_QUEUED = 1;
    TS_PROCESSING = 2;
    TS_PROCESSED = 3;
    TS_FAILED = 4;
}


message Transaction {
    uint64  id = 1;
    uint64  chain_id = 2;
    uint64  block_id = 3;
    uint64  transaction_index = 4;
    string  hash = 5;
    uint64  nonce = 6;
    string  from_address = 7;
    string  to_address = 8;
    string  method = 9;
    string  method_details = 10;
    string  data = 11;
    string  value = 12;
    uint64  gas = 13;
    uint64  gas_used = 14;
    uint64  cumulative_gas_used = 15;
    string  gas_fee_cap = 16;
    string  gas_tip_cap = 17;
    string  gas_price = 18;
    string  price = 19;
    uint32  type = 20;
    double  size = 21;
    bool    protected = 22;
    uint32  logs_count = 23;
    txpull.v1.transactions.TransactionStatus  status = 24;
    google.protobuf.Timestamp queued_timestamp = 25;
    google.protobuf.Timestamp processed_timestamp = 26; 
}

message FilterTransactionRequest {
    txpull.v1.common.Status status = 1;
}

message FilterTransactionResponse {
    txpull.v1.common.Status status = 1;
    repeated txpull.v1.transactions.Transaction transaction = 2;
}

message GetTransactionRequest {
    uint64 transaction_id = 1;
    uint64 id = 2;
}

message GetTransactionResponse {
    txpull.v1.common.Status status = 1;
    txpull.v1.transactions.Transaction transaction = 2;
}

service Transactions {
    rpc Filter(FilterTransactionRequest) returns (FilterTransactionResponse) {
        option (google.api.http) = {
            get: "/v1/transaction"
        };
    };

    rpc Get(GetTransactionRequest) returns (GetTransactionResponse) {
        option (google.api.http) = {
            get: "/v1/transaction/{id}"
        };
    };
}