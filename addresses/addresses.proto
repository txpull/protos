syntax = "proto3";
option go_package = "github.com/txpull/protos/dist/go/addresses;addresses";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "common/status.proto";

package txpull.v1.addresses;

enum MaliciousAddressReasons {
    MAR_NONE = 0;
    MAR_CONTRACT_DEPLOYMENT_FRAUD = 1;
    MAR_TRANSFER_TO_MALICIOUS_ADDR = 2;
    MAR_TRANSFER_FROM_MALICIOUS_ADDR = 3;
}

enum AddressStatus {
    AS_NONE = 0;
    AS_QUEUED = 1;
    AS_PROCESSING = 2;
    AS_PROCESSED = 3;
}

message Address {
    uint64 id = 1;
    uint64 chain_id = 2;
    string address = 3;
    uint64 first_transaction = 4;
    bool malicious = 5;
    txpull.v1.addresses.MaliciousAddressReasons malicious_reason = 6;
    string malicious_reason_details = 7;
    txpull.v1.addresses.AddressStatus status = 8;
    google.protobuf.Timestamp available_since_timestamp = 9;
    google.protobuf.Timestamp queued_timestamp = 10;
    google.protobuf.Timestamp processed_timestamp = 11; 
}


message FilterAddressRequest {
    txpull.v1.common.Status status = 1;
    bool malicious = 2;
    txpull.v1.addresses.MaliciousAddressReasons malicious_reason = 6;
}

message FilterAddressResponse {
    txpull.v1.common.Status status = 1;
    repeated txpull.v1.addresses.Address addresses = 2;
}

message GetAddressRequest {
    uint64 chain_id = 1;
    uint64 id = 2;
    string address = 3;
}

message GetAddressResponse {
    txpull.v1.common.Status status = 1;
    txpull.v1.addresses.Address address = 2;
}

service Addresses {
    rpc Filter(FilterAddressRequest) returns (FilterAddressResponse) {
        option (google.api.http) = {
            get: "/v1/addresses"
        };
    };

    rpc Get(GetAddressRequest) returns (GetAddressResponse) {
        option (google.api.http) = {
            get: "/v1/addresses/{id}"
        };
    };
}