// source: transactions/transactions.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var common_status_pb = require('../common/status_pb.js');
goog.object.extend(proto, common_status_pb);
goog.exportSymbol('proto.txpull.v1.transactions.FilterTransactionRequest', null, global);
goog.exportSymbol('proto.txpull.v1.transactions.FilterTransactionResponse', null, global);
goog.exportSymbol('proto.txpull.v1.transactions.GetTransactionRequest', null, global);
goog.exportSymbol('proto.txpull.v1.transactions.GetTransactionResponse', null, global);
goog.exportSymbol('proto.txpull.v1.transactions.Transaction', null, global);
goog.exportSymbol('proto.txpull.v1.transactions.TransactionStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.transactions.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.transactions.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.transactions.Transaction.displayName = 'proto.txpull.v1.transactions.Transaction';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.transactions.FilterTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.transactions.FilterTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.transactions.FilterTransactionRequest.displayName = 'proto.txpull.v1.transactions.FilterTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.transactions.FilterTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.txpull.v1.transactions.FilterTransactionResponse.repeatedFields_, null);
};
goog.inherits(proto.txpull.v1.transactions.FilterTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.transactions.FilterTransactionResponse.displayName = 'proto.txpull.v1.transactions.FilterTransactionResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.transactions.GetTransactionRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.transactions.GetTransactionRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.transactions.GetTransactionRequest.displayName = 'proto.txpull.v1.transactions.GetTransactionRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.txpull.v1.transactions.GetTransactionResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.txpull.v1.transactions.GetTransactionResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.txpull.v1.transactions.GetTransactionResponse.displayName = 'proto.txpull.v1.transactions.GetTransactionResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.transactions.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.transactions.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.transactions.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.transactions.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    chainId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    transactionIndex: jspb.Message.getFieldWithDefault(msg, 4, 0),
    hash: jspb.Message.getFieldWithDefault(msg, 5, ""),
    nonce: jspb.Message.getFieldWithDefault(msg, 6, 0),
    fromAddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    toAddress: jspb.Message.getFieldWithDefault(msg, 8, ""),
    method: jspb.Message.getFieldWithDefault(msg, 9, ""),
    methodDetails: jspb.Message.getFieldWithDefault(msg, 10, ""),
    data: jspb.Message.getFieldWithDefault(msg, 11, ""),
    value: jspb.Message.getFieldWithDefault(msg, 12, ""),
    gas: jspb.Message.getFieldWithDefault(msg, 13, 0),
    gasUsed: jspb.Message.getFieldWithDefault(msg, 14, 0),
    cumulativeGasUsed: jspb.Message.getFieldWithDefault(msg, 15, 0),
    gasFeeCap: jspb.Message.getFieldWithDefault(msg, 16, ""),
    gasTipCap: jspb.Message.getFieldWithDefault(msg, 17, ""),
    gasPrice: jspb.Message.getFieldWithDefault(msg, 18, ""),
    price: jspb.Message.getFieldWithDefault(msg, 19, ""),
    type: jspb.Message.getFieldWithDefault(msg, 20, 0),
    size: jspb.Message.getFloatingPointFieldWithDefault(msg, 21, 0.0),
    pb_protected: jspb.Message.getBooleanFieldWithDefault(msg, 22, false),
    logsCount: jspb.Message.getFieldWithDefault(msg, 23, 0),
    status: jspb.Message.getFieldWithDefault(msg, 24, 0),
    queuedTimestamp: (f = msg.getQueuedTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    processedTimestamp: (f = msg.getProcessedTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.transactions.Transaction}
 */
proto.txpull.v1.transactions.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.transactions.Transaction;
  return proto.txpull.v1.transactions.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.transactions.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.transactions.Transaction}
 */
proto.txpull.v1.transactions.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setChainId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTransactionIndex(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setNonce(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setToAddress(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethodDetails(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGas(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGasUsed(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCumulativeGasUsed(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setGasFeeCap(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setGasTipCap(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setGasPrice(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setPrice(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSize(value);
      break;
    case 22:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProtected(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLogsCount(value);
      break;
    case 24:
      var value = /** @type {!proto.txpull.v1.transactions.TransactionStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 25:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setQueuedTimestamp(value);
      break;
    case 26:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setProcessedTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.transactions.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.transactions.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.transactions.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.transactions.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getChainId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBlockId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getTransactionIndex();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNonce();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getFromAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getToAddress();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMethodDetails();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getGas();
  if (f !== 0) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = message.getGasUsed();
  if (f !== 0) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = message.getCumulativeGasUsed();
  if (f !== 0) {
    writer.writeUint64(
      15,
      f
    );
  }
  f = message.getGasFeeCap();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getGasTipCap();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getGasPrice();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getPrice();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeDouble(
      21,
      f
    );
  }
  f = message.getProtected();
  if (f) {
    writer.writeBool(
      22,
      f
    );
  }
  f = message.getLogsCount();
  if (f !== 0) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      24,
      f
    );
  }
  f = message.getQueuedTimestamp();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getProcessedTimestamp();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 chain_id = 2;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getChainId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setChainId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 block_id = 3;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getBlockId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setBlockId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 transaction_index = 4;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getTransactionIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setTransactionIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string hash = 5;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 nonce = 6;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string from_address = 7;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getFromAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setFromAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string to_address = 8;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getToAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setToAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string method = 9;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setMethod = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string method_details = 10;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getMethodDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setMethodDetails = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string data = 11;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string value = 12;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional uint64 gas = 13;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getGas = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setGas = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional uint64 gas_used = 14;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getGasUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setGasUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional uint64 cumulative_gas_used = 15;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getCumulativeGasUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setCumulativeGasUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};


/**
 * optional string gas_fee_cap = 16;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getGasFeeCap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setGasFeeCap = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string gas_tip_cap = 17;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getGasTipCap = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setGasTipCap = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string gas_price = 18;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getGasPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setGasPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string price = 19;
 * @return {string}
 */
proto.txpull.v1.transactions.Transaction.prototype.getPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional uint32 type = 20;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 20, value);
};


/**
 * optional double size = 21;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 21, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setSize = function(value) {
  return jspb.Message.setProto3FloatField(this, 21, value);
};


/**
 * optional bool protected = 22;
 * @return {boolean}
 */
proto.txpull.v1.transactions.Transaction.prototype.getProtected = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 22, false));
};


/**
 * @param {boolean} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setProtected = function(value) {
  return jspb.Message.setProto3BooleanField(this, 22, value);
};


/**
 * optional uint32 logs_count = 23;
 * @return {number}
 */
proto.txpull.v1.transactions.Transaction.prototype.getLogsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setLogsCount = function(value) {
  return jspb.Message.setProto3IntField(this, 23, value);
};


/**
 * optional TransactionStatus status = 24;
 * @return {!proto.txpull.v1.transactions.TransactionStatus}
 */
proto.txpull.v1.transactions.Transaction.prototype.getStatus = function() {
  return /** @type {!proto.txpull.v1.transactions.TransactionStatus} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/**
 * @param {!proto.txpull.v1.transactions.TransactionStatus} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 24, value);
};


/**
 * optional google.protobuf.Timestamp queued_timestamp = 25;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.txpull.v1.transactions.Transaction.prototype.getQueuedTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 25));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
*/
proto.txpull.v1.transactions.Transaction.prototype.setQueuedTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 25, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.clearQueuedTimestamp = function() {
  return this.setQueuedTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.transactions.Transaction.prototype.hasQueuedTimestamp = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional google.protobuf.Timestamp processed_timestamp = 26;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.txpull.v1.transactions.Transaction.prototype.getProcessedTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 26));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
*/
proto.txpull.v1.transactions.Transaction.prototype.setProcessedTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 26, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.transactions.Transaction} returns this
 */
proto.txpull.v1.transactions.Transaction.prototype.clearProcessedTimestamp = function() {
  return this.setProcessedTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.transactions.Transaction.prototype.hasProcessedTimestamp = function() {
  return jspb.Message.getField(this, 26) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.transactions.FilterTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.transactions.FilterTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.transactions.FilterTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.transactions.FilterTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && common_status_pb.Status.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.transactions.FilterTransactionRequest}
 */
proto.txpull.v1.transactions.FilterTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.transactions.FilterTransactionRequest;
  return proto.txpull.v1.transactions.FilterTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.transactions.FilterTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.transactions.FilterTransactionRequest}
 */
proto.txpull.v1.transactions.FilterTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_status_pb.Status;
      reader.readMessage(value,common_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.transactions.FilterTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.transactions.FilterTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.transactions.FilterTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.transactions.FilterTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_status_pb.Status.serializeBinaryToWriter
    );
  }
};


/**
 * optional txpull.v1.common.Status status = 1;
 * @return {?proto.txpull.v1.common.Status}
 */
proto.txpull.v1.transactions.FilterTransactionRequest.prototype.getStatus = function() {
  return /** @type{?proto.txpull.v1.common.Status} */ (
    jspb.Message.getWrapperField(this, common_status_pb.Status, 1));
};


/**
 * @param {?proto.txpull.v1.common.Status|undefined} value
 * @return {!proto.txpull.v1.transactions.FilterTransactionRequest} returns this
*/
proto.txpull.v1.transactions.FilterTransactionRequest.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.transactions.FilterTransactionRequest} returns this
 */
proto.txpull.v1.transactions.FilterTransactionRequest.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.transactions.FilterTransactionRequest.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.txpull.v1.transactions.FilterTransactionResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.transactions.FilterTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.transactions.FilterTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.transactions.FilterTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.transactions.FilterTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && common_status_pb.Status.toObject(includeInstance, f),
    transactionList: jspb.Message.toObjectList(msg.getTransactionList(),
    proto.txpull.v1.transactions.Transaction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.transactions.FilterTransactionResponse}
 */
proto.txpull.v1.transactions.FilterTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.transactions.FilterTransactionResponse;
  return proto.txpull.v1.transactions.FilterTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.transactions.FilterTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.transactions.FilterTransactionResponse}
 */
proto.txpull.v1.transactions.FilterTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_status_pb.Status;
      reader.readMessage(value,common_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.txpull.v1.transactions.Transaction;
      reader.readMessage(value,proto.txpull.v1.transactions.Transaction.deserializeBinaryFromReader);
      msg.addTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.transactions.FilterTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.transactions.FilterTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.transactions.FilterTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.transactions.FilterTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getTransactionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.txpull.v1.transactions.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional txpull.v1.common.Status status = 1;
 * @return {?proto.txpull.v1.common.Status}
 */
proto.txpull.v1.transactions.FilterTransactionResponse.prototype.getStatus = function() {
  return /** @type{?proto.txpull.v1.common.Status} */ (
    jspb.Message.getWrapperField(this, common_status_pb.Status, 1));
};


/**
 * @param {?proto.txpull.v1.common.Status|undefined} value
 * @return {!proto.txpull.v1.transactions.FilterTransactionResponse} returns this
*/
proto.txpull.v1.transactions.FilterTransactionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.transactions.FilterTransactionResponse} returns this
 */
proto.txpull.v1.transactions.FilterTransactionResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.transactions.FilterTransactionResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Transaction transaction = 2;
 * @return {!Array<!proto.txpull.v1.transactions.Transaction>}
 */
proto.txpull.v1.transactions.FilterTransactionResponse.prototype.getTransactionList = function() {
  return /** @type{!Array<!proto.txpull.v1.transactions.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.txpull.v1.transactions.Transaction, 2));
};


/**
 * @param {!Array<!proto.txpull.v1.transactions.Transaction>} value
 * @return {!proto.txpull.v1.transactions.FilterTransactionResponse} returns this
*/
proto.txpull.v1.transactions.FilterTransactionResponse.prototype.setTransactionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.txpull.v1.transactions.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.txpull.v1.transactions.Transaction}
 */
proto.txpull.v1.transactions.FilterTransactionResponse.prototype.addTransaction = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.txpull.v1.transactions.Transaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.txpull.v1.transactions.FilterTransactionResponse} returns this
 */
proto.txpull.v1.transactions.FilterTransactionResponse.prototype.clearTransactionList = function() {
  return this.setTransactionList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.transactions.GetTransactionRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.transactions.GetTransactionRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.transactions.GetTransactionRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.transactions.GetTransactionRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.transactions.GetTransactionRequest}
 */
proto.txpull.v1.transactions.GetTransactionRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.transactions.GetTransactionRequest;
  return proto.txpull.v1.transactions.GetTransactionRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.transactions.GetTransactionRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.transactions.GetTransactionRequest}
 */
proto.txpull.v1.transactions.GetTransactionRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTransactionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.transactions.GetTransactionRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.transactions.GetTransactionRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.transactions.GetTransactionRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.transactions.GetTransactionRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 transaction_id = 1;
 * @return {number}
 */
proto.txpull.v1.transactions.GetTransactionRequest.prototype.getTransactionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.GetTransactionRequest} returns this
 */
proto.txpull.v1.transactions.GetTransactionRequest.prototype.setTransactionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.txpull.v1.transactions.GetTransactionRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.txpull.v1.transactions.GetTransactionRequest} returns this
 */
proto.txpull.v1.transactions.GetTransactionRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.txpull.v1.transactions.GetTransactionResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.txpull.v1.transactions.GetTransactionResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.txpull.v1.transactions.GetTransactionResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.transactions.GetTransactionResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && common_status_pb.Status.toObject(includeInstance, f),
    transaction: (f = msg.getTransaction()) && proto.txpull.v1.transactions.Transaction.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.txpull.v1.transactions.GetTransactionResponse}
 */
proto.txpull.v1.transactions.GetTransactionResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.txpull.v1.transactions.GetTransactionResponse;
  return proto.txpull.v1.transactions.GetTransactionResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.txpull.v1.transactions.GetTransactionResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.txpull.v1.transactions.GetTransactionResponse}
 */
proto.txpull.v1.transactions.GetTransactionResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_status_pb.Status;
      reader.readMessage(value,common_status_pb.Status.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new proto.txpull.v1.transactions.Transaction;
      reader.readMessage(value,proto.txpull.v1.transactions.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.txpull.v1.transactions.GetTransactionResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.txpull.v1.transactions.GetTransactionResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.txpull.v1.transactions.GetTransactionResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.txpull.v1.transactions.GetTransactionResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_status_pb.Status.serializeBinaryToWriter
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.txpull.v1.transactions.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * optional txpull.v1.common.Status status = 1;
 * @return {?proto.txpull.v1.common.Status}
 */
proto.txpull.v1.transactions.GetTransactionResponse.prototype.getStatus = function() {
  return /** @type{?proto.txpull.v1.common.Status} */ (
    jspb.Message.getWrapperField(this, common_status_pb.Status, 1));
};


/**
 * @param {?proto.txpull.v1.common.Status|undefined} value
 * @return {!proto.txpull.v1.transactions.GetTransactionResponse} returns this
*/
proto.txpull.v1.transactions.GetTransactionResponse.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.transactions.GetTransactionResponse} returns this
 */
proto.txpull.v1.transactions.GetTransactionResponse.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.transactions.GetTransactionResponse.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Transaction transaction = 2;
 * @return {?proto.txpull.v1.transactions.Transaction}
 */
proto.txpull.v1.transactions.GetTransactionResponse.prototype.getTransaction = function() {
  return /** @type{?proto.txpull.v1.transactions.Transaction} */ (
    jspb.Message.getWrapperField(this, proto.txpull.v1.transactions.Transaction, 2));
};


/**
 * @param {?proto.txpull.v1.transactions.Transaction|undefined} value
 * @return {!proto.txpull.v1.transactions.GetTransactionResponse} returns this
*/
proto.txpull.v1.transactions.GetTransactionResponse.prototype.setTransaction = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.txpull.v1.transactions.GetTransactionResponse} returns this
 */
proto.txpull.v1.transactions.GetTransactionResponse.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.txpull.v1.transactions.GetTransactionResponse.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * @enum {number}
 */
proto.txpull.v1.transactions.TransactionStatus = {
  TS_NONE: 0,
  TS_QUEUED: 1,
  TS_PROCESSING: 2,
  TS_PROCESSED: 3,
  TS_FAILED: 4
};

goog.object.extend(exports, proto.txpull.v1.transactions);
