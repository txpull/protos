syntax = "proto3";
option go_package = "github.com/txpull/protos/dist/go/blocks;blocks";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "common/status.proto";

package txpull.v1.blocks;

enum BlockStatus {
    BS_NONE = 0;
    BS_QUEUED = 1;
    BS_PROCESSING = 2;
    BS_PROCESSED = 3;
    BS_FAILED = 4;
}

message Block {
    uint64  id = 1;
    uint64  chain_id = 2;
    uint64  number = 3;
    string  hash = 4;
    string  parent_hash = 5;
    string  uncle_hash = 6;
    string  mix_hash = 7;
    uint64  nonce = 8;
    bytes   logs_bloom = 9;
    string  state_root = 10;
    string  transactions_root = 11;
    string  receipts_root = 12;
    string  coinbase = 13;
    uint64  difficulty = 14;
    double  size = 15;
    google.protobuf.Timestamp  timestamp = 16;
    bytes    extra_data = 17;
    uint64  gas_limit = 18;
    uint64  gas_used = 19;
    uint64  base_fee = 20;
    uint32  total_transactions_count = 21;
    uint32  processed_transactions_count = 22;
    txpull.v1.blocks.BlockStatus  status = 23;
    google.protobuf.Timestamp queued_timestamp = 24;
    google.protobuf.Timestamp processed_timestamp = 25; 
}

message FilterBlockRequest {
    txpull.v1.common.Status status = 1;
}

message FilterBlockResponse {
    txpull.v1.common.Status status = 1;
    repeated txpull.v1.blocks.Block blocks = 2;
}

message GetBlockRequest {
    uint64 block_id = 1;
    uint64 id = 2;
}

message GetBlockResponse {
    txpull.v1.common.Status status = 1;
    txpull.v1.blocks.Block block = 2;
}

service Blocks {
    rpc Filter(FilterBlockRequest) returns (FilterBlockResponse) {
        option (google.api.http) = {
            get: "/v1/blocks"
        };
    };

    rpc Get(GetBlockRequest) returns (GetBlockResponse) {
        option (google.api.http) = {
            get: "/v1/blocks/{id}"
        };
    };
}